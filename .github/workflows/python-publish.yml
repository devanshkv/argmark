# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use a recent Python 3.x, uv will be installed within it

    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
      shell: bash

    - name: Install build dependencies
      run: |
        source $HOME/.cargo/env # Ensure uv is in PATH
        uv pip install --system build twine

    - name: Build package
      run: |
        source $HOME/.cargo/env
        uv run python -m build --sdist --wheel

    - name: Publish package
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        source $HOME/.cargo/env # Not strictly necessary for twine if twine is in system PATH after install
        twine upload dist/*
```
